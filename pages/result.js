import Head from "next/head"
import Link from "next/link"
import { Button, ButtonGroup, Container, Dropdown, Table } from "react-bootstrap"
import RaceResultTable from "../components/RaceResultTable"
import RaceRepository from "../repository/RaceRepository"
import ResultReposiotry from "../repository/ResultReposiotry"

export async function getServerSideProps(context) {
    const race = await RaceRepository.fetchRace(context.query.raceId)
    const horses = await ResultReposiotry.fetchResult(context.query.raceId,context.query.raceLength,context.query.stadium)
    const maxResult = horses.length > 0 ? horses.reduce((max,now) => Math.max(max,now.raceResults.length),0) : 0
    const racesResponse = await fetch("http://localhost:8080/v1/race/before")
    const races = await racesResponse.json()
    return {
        props: {
            maxResult: maxResult,
            horses: horses,
            race: race[0],
            races: races
        }
    }
}

export default function Home(props) {
    return(
        <dev>
            <Head>
                <title>Umaaaaaa</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous"></link>
            </Head>


            <main>
                <Container>
                    <ButtonGroup style={{padding: "1.5rem"}}>
                        <Dropdown>
                            <Dropdown.Toggle variant="secondary" id="dropdown-basic">
                                {props.race.raceName}
                            </Dropdown.Toggle>
                            <Dropdown.Menu>
                                {props.races.map(
                                    (race) => (<Link href={`?raceId=${race.id}`} passHref><Dropdown.Item>{race.raceName}</Dropdown.Item></Link>)
                                )}
                            </Dropdown.Menu>
                        </Dropdown>
                    </ButtonGroup>
                    <Button variant="outline-dark" href={`/result?raceId=${props.race.id}`} passHref style={{marginLeft: "1rem"}}>絞り込みなし</Button>
                    <Button variant="outline-dark" href={`/result?raceId=${props.race.id}&stadium=${props.race.stadium}`} passHref style={{marginLeft: "1rem"}}>同競技場</Button>
                    <Button variant="outline-dark" href={`/result?raceId=${props.race.id}&stadium=${props.race.stadium}&raceLength=${props.race.raceLength}`} passHref style={{marginLeft: "1rem"}}>同競技場同距離</Button>
                    <div className="table-responsive"> 
                        <table className="table" style={{width: "max-content"}}>
                        <thead>
                            <tr>
                                <th>枠</th>
                                <th>馬名</th>
                                {[...Array(props.maxResult).keys()].map(
                                    (index) => (<th>{index+1}走前</th>)
                                )}
                            </tr>
                        </thead>
                        {props.horses.map((horse) => <RaceResultTable horse={horse} />)}
                        </table>
                    </div>
                </Container>
            </main>
        </dev>
    )
}