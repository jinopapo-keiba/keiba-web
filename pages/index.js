import Head from 'next/head'
import Image from 'next/image'
import 'bootstrap/dist/css/bootstrap.min.css';
import Container from 'react-bootstrap/Container';
import { Card, Col, Navbar, NavbarBrand, Row, Table } from 'react-bootstrap';
import styles from '../styles/Home.module.css'
import { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, XAxis, YAxis } from 'recharts';
import TimeChart from '../components/TimeChart';


function normalizeTimes(times){
  const normalizedTimes = times.map(time => time/1000)
  let minTime =  Number.MAX_SAFE_INTEGER
  normalizedTimes.forEach(
    time => {
      if(time !== 0){
        minTime = Math.min(minTime,time - 0.3)
      }
    }
  )
  return {
    minTime: minTime,
    normalizedTimes: normalizedTimes.map(time => { return {time: time === 0 ? minTime.toFixed(1) : time.toFixed(1)}})
  }
}

export async function getServerSideProps(context) {
  const minResponse = await fetch("http://localhost:8080/v1/raceResult/bestTime?stadium=%E4%B8%AD%E5%B1%B1&raceLength=2000&raceId=69")
  const minJson = await minResponse.json();
  const minFullTimes = normalizeTimes(minJson.bestRaceTimes.map(bestRaceTime => bestRaceTime.fullTime))
  const minLastRapTimes = normalizeTimes(minJson.bestRaceTimes.map(bestRaceTime => bestRaceTime.lastRapTime))
  const avgResponse = await fetch("http://localhost:8080/v1/raceResult/bestTime?stadium=%E4%B8%AD%E5%B1%B1&raceLength=2000&raceId=69&summaryType=AVG")
  const avgJson = await avgResponse.json();
  const avgFullTimes = normalizeTimes(avgJson.bestRaceTimes.map(bestRaceTime => bestRaceTime.fullTime))
  const avgLastRapTimes = normalizeTimes(avgJson.bestRaceTimes.map(bestRaceTime => bestRaceTime.lastRapTime))
  const horses = minJson.bestRaceTimes.map(bestRaceTime => { 
    return {
      name: bestRaceTime.raceHorse.horse.name,
      frameNumber: bestRaceTime.raceHorse.frameNumber
    }
  })

  return {
    props: {
      minFullTimes: minFullTimes.normalizedTimes,
      minMinFullTime: minFullTimes.minTime,
      minLastRapTimes: minLastRapTimes.normalizedTimes,
      minMinLastRapTime: minLastRapTimes.minTime,
      avgFullTimes: avgFullTimes.normalizedTimes,
      minAvgFullTime: avgFullTimes.minTime,
      avgLastRapTimes: avgLastRapTimes.normalizedTimes,
      minAvgLastRapTime: avgLastRapTimes.minTime,
      horses: horses
    }
  }
}

export default function Home(props) {
  const horses = [];
  props.horses.forEach(
    horse => horses.push(<tr><td>{horse.frameNumber}</td><td>{horse.name}</td></tr>)
  )
  return (
    <dev>
      <Head>
        <title>Umaaaaaa</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous"></link>
      </Head>
      <header>
        <Navbar bg="dark" expand="md" variant="dark">
          <Container style={{padding: "0"}}>
            <Navbar.Brand href="#home">Umaaaaaa</Navbar.Brand>
          </Container>
        </Navbar>
      </header>

      <main> 
        <Container>
          <Row>
            <Col>
              <TimeChart title="同距離同会場最速フルタイム" data={props.minFullTimes} dataMin={props.minFullTimes.minTime}></TimeChart>
            </Col>
            <Col>
              <TimeChart title="同距離同会場最速上がり" data={props.minLastRapTimes} dataMin={props.minMinLastRapTime} ></TimeChart>
            </Col>
          </Row>
        </Container>
        <Container>
          <Row>
            <Col>
              <TimeChart title="同距離同会場平均フルタイム" data={props.minFullTimes} dataMin={props.minFullTimes.minTime}></TimeChart>
            </Col>
            <Col>
              <TimeChart title="同距離同会場平均上がり" data={props.minLastRapTimes} dataMin={props.minMinLastRapTime} ></TimeChart>
            </Col>
          </Row>
        </Container>
        <Container>
          <Table>
            <thead>
              <tr>
                <th>枠</th>
                <th>馬名</th>
              </tr>
            </thead>
            <tbody>
              {horses}
            </tbody>
          </Table>
        </Container>
      </main>

    </dev>
  )
}
